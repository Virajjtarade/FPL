#include <stdio.h>

// Function to calculate the maximum amount of water that can be trapped
int trap_water(int height[], int n) {
    int left = 0;  // Left pointer
    int right = n - 1;  // Right pointer
    int max_left = 0;  // Maximum height of bar on the left
    int max_right = 0;  // Maximum height of bar on the right
    int water = 0;  // Total water trapped

    while (left <= right) {
        // If the height of the bar on the left is less than the height of the bar on the right
        if (height[left] < height[right]) {
            // If the height of the bar on the left is greater than the max_left, update max_left
            if (height[left] > max_left) {
                max_left = height[left];
            } else {
                // Calculate the water trapped and add it to the total water
                water += max_left - height[left];
            }
            // Move the left pointer to the right
            left++;
        } else {
            // If the height of the bar on the right is greater than the max_right, update max_right
            if (height[right] > max_right) {
                max_right = height[right];
            } else {
                // Calculate the water trapped and add it to the total water
                water += max_right - height[right];
            }
            // Move the right pointer to the left
            right--;
        }
    }

    return water;
}

int main() {
    int height[] = {0, 1, 0, 2, 1, 0, 1, 3, 2, 1, 2, 1};
    int n = sizeof(height) / sizeof(height[0]);

    printf("Maximum water that can be trapped: %d\n", trap_water(height, n));

    return 0;
}
